PackageSet{
    Package cob_object_detection_msgs{ Specs { 
      TopicSpec AcquireObjectImageAction{ message { AcquireObjectImageActionGoal action_goal AcquireObjectImageActionResult action_result AcquireObjectImageActionFeedback action_feedback }},
      TopicSpec AcquireObjectImageActionFeedback{ message { Header header "actionlib_msgs.GoalStatus" status AcquireObjectImageFeedback feedback }},
      TopicSpec AcquireObjectImageActionGoal{ message { Header header "actionlib_msgs.GoalID" goal_id AcquireObjectImageGoal goal }},
      TopicSpec AcquireObjectImageActionResult{ message { Header header "actionlib_msgs.GoalStatus" status AcquireObjectImageResult result }},
      TopicSpec AcquireObjectImageFeedback{ message { float32 percent_complete }},
      TopicSpec AcquireObjectImageGoal{ message { string object_name bool reset_image_counter "geometry_msgs.PoseStamped" pose "geometry_msgs.PoseStamped"[] sdh_joints }},
      TopicSpec AcquireObjectImageResult{ message {  }},
      TopicSpec DetectObjectsAction{ message { DetectObjectsActionGoal action_goal DetectObjectsActionResult action_result DetectObjectsActionFeedback action_feedback }},
      TopicSpec DetectObjectsActionFeedback{ message { Header header "actionlib_msgs.GoalStatus" status DetectObjectsFeedback feedback }},
      TopicSpec DetectObjectsActionGoal{ message { Header header "actionlib_msgs.GoalID" goal_id DetectObjectsGoal goal }},
      TopicSpec DetectObjectsActionResult{ message { Header header "actionlib_msgs.GoalStatus" status DetectObjectsResult result }},
      TopicSpec DetectObjectsFeedback{ message { float32 percent_complete }},
      TopicSpec DetectObjectsGoal{ message { "std_msgs.String" object_name }},
      TopicSpec DetectObjectsResult{ message { "cob_object_detection_msgs.DetectionArray" object_list }},
      TopicSpec Detection{ message { Header header string label int32 id string detector float32 score Mask mask "geometry_msgs.PoseStamped" pose "geometry_msgs.Point" bounding_box_lwh }},
      TopicSpec DetectionArray{ message { Header header Detection[] detections }},
      TopicSpec Mask{ message { Rect roi "sensor_msgs.Image" mask }},
      TopicSpec MaskArray{ message { Header header Mask[] masks }},
      TopicSpec PoseRT{ message { float64[] rvec float64[] tvec }},
      TopicSpec Rect{ message { int32 x int32 y int32 width int32 height }},
      TopicSpec RectArray{ message { Header header Rect[] rects }},
      TopicSpec TrainObjectAction{ message { TrainObjectActionGoal action_goal TrainObjectActionResult action_result TrainObjectActionFeedback action_feedback }},
      TopicSpec TrainObjectActionFeedback{ message { Header header "actionlib_msgs.GoalStatus" status TrainObjectFeedback feedback }},
      TopicSpec TrainObjectActionGoal{ message { Header header "actionlib_msgs.GoalID" goal_id TrainObjectGoal goal }},
      TopicSpec TrainObjectActionResult{ message { Header header "actionlib_msgs.GoalStatus" status TrainObjectResult result }},
      TopicSpec TrainObjectFeedback{ message { float32 percent_complete }},
      TopicSpec TrainObjectGoal{ message { string object_name }},
      TopicSpec TrainObjectResult{ message {  }},
      ServiceSpec AcquireObjectImage{ request { string object_name bool reset_image_counter "geometry_msgs.PoseStamped" pose "geometry_msgs.PoseStamped"[] sdh_joints } response {  } },
      ServiceSpec BaTestEnvironment{ request { int32 number_points float32 frame_view_number float32 cone_points_per_plane float32 limit_error_matching float32 ba_kernel_param int32 ba_num_iter float32 ba_initial_mu float32 ba_final_mu_factor float32 ba_tau float32 angle_sigma_degree float32 translate_sigma_m float32 obs_point_sigma_m float32 world_point_sigma_m } response { float32 mean_error float32 std_dev float32 min_error float32 max_error float32 runs_count float32 runs_sum float32 runs_sum2 float32 time_duration int32 observations int32 false_matchings "std_msgs.String" result } },
      ServiceSpec BagTrainObject{ request { "std_msgs.String" object_name } response { "std_msgs.String" trained } },
      ServiceSpec DetectObjects{ request { "std_msgs.String" object_name "sensor_msgs.RegionOfInterest" roi } response { "cob_object_detection_msgs.DetectionArray" object_list } },
      ServiceSpec SaveRecordedObject{ request { string storage_location } response {  } },
      ServiceSpec StartObjectRecording{ request { string object_label } response {  } },
      ServiceSpec StopObjectRecording{ request { bool stop_although_model_is_incomplete } response { bool recording_stopped } },
      ServiceSpec TrainObject{ request { string object_name } response {  } },
      ActionSpec AcquireObjectImageAct{ goal { AcquireObjectImageActionGoal action_goal} result {AcquireObjectImageActionResult action_result} feedback {AcquireObjectImageActionFeedback action_feedback}},
      ActionSpec DetectObjectsAct{ goal { DetectObjectsActionGoal action_goal} result {DetectObjectsActionResult action_result} feedback {DetectObjectsActionFeedback action_feedback}},
      ActionSpec TrainObjectAct{ goal { TrainObjectActionGoal action_goal} result {TrainObjectActionResult action_result} feedback {TrainObjectActionFeedback action_feedback}}

    }}
  }
